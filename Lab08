import java.io.File;
import java.io.FileNotFoundException;
import java.lang.reflect.Array;
import java.util.*;
public class KEKW {
    public static void main(String[] args) throws FileNotFoundException {
        int x = countNums("Lab08.txt");
        System.out.println(x);
        System.out.println();
        System.out.println("=====================================================");

        printArray(readNums("Lab08.txt", x));

        System.out.println();

        System.out.println("=====================================================");

        printArray(bubbleSort(readNums("Lab08.txt",x)));

        System.out.println();

        System.out.println("=====================================================");

        average(readNums("Lab08.txt",x));

    }

    private static int countNums(String filename) throws FileNotFoundException {
        Scanner fileScan = new Scanner(new File(filename));
        int count = 0;
        while (fileScan.hasNext()) {
            Object k = fileScan.next();
            count++;
        }
        return count;
    }

    private static Object[] readNums(String filename, int size) throws FileNotFoundException {
        Object[] Arr = new Object[size];
        Scanner fileScan = new Scanner(new File(filename));
        int j = 0;
        while (fileScan.hasNext()) {
            Object x = fileScan.next();
            Arr[j] = x;
            j++;
        }
        return Arr;
    }

    private static void printArray(Object[] x) {
        for (int j = 0; j < x.length; j++) {
            if (j % 10 == 0) {
                System.out.println();
            }
            System.out.print(x[j] + " ");

        }
    }

    private static Object[] bubbleSort(Object[] x){
        for (int i = 0; i < ( x.length - 1 ); i++) {
            for (int j = 0; j < x.length - i - 1; j++) {
                if (Double.valueOf(x[j].toString()) < Double.valueOf(x[j+1].toString()))
                {
                    Object temp = x[j];
                    x[j] = x[j+1];
                    x[j+1] = temp;
                }
            }
        }
        return x;
    }

    private static void average(Object[] x) {
        double maxValue=Double.valueOf(x[0].toString());
        for(int i=1;i <x.length;i++){
            if(Double.valueOf(x[i].toString()) > maxValue){
                maxValue = Double.valueOf(x[i].toString());
            }
        }
        System.out.println("Maximum: "+maxValue);
        double minValue =Double.valueOf(x[0].toString());
        for(int i=1;i<x.length;i++){
            if(Double.valueOf(x[i].toString())< minValue){
                minValue = Double.valueOf(x[i].toString());
            }
        }
        System.out.println("Minimum: "+ minValue);

        double sum=0;
        int count=0;
        for(int k=0;k<x.length;k++){
            Object m=x[k];
            sum+=Double.valueOf(m.toString());
            count++;
        }
        double ave=sum/count;
        System.out.printf("Average: %.4f",ave);
    }
}
